# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

source 'https://cdn.cocoapods.org/'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => '8.0.0'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

require 'pry'
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # config.build_settings["VALID_ARCHS[sdk=iphonesimulator*]"] ||= "arm64 arm64e x86_64"
      # config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      # config.build_settings["SDKROOT"] = 'iphoneos'
      xcconfig_path = config.base_configuration_reference.real_path
#      if target.name == 'AppAuth' #&& config.name != 'Debug' && config.name != 'Release'
#binding.pry
#      end
      build_settings = Hash[*File.read(xcconfig_path).lines.map{ |x| x.split(/\s+=\s+/, 2) }.flatten]
      puts "#{target.name}:#{config.name}:#{build_settings}"

     # build_settings.delete("VALID_ARCHS")
     # build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"

     # lines = ""
     # build_settings.each do |key, value|
     #   lines += "#{key} = #{value.chomp}\n"
     # end
     # puts "end: #{build_settings}"
     # File.open(xcconfig_path, "w") { |file| 
     #   file.puts lines
     # }
    end
  end
end
